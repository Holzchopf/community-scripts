from flpianoroll import *

def main():
    pitches = {}

    for i in range(score.noteCount):
        note = score.getNote(i)
        
        if note.number not in pitches:
            pitches[note.number] = [(note, i)]
        else:
            pitches[note.number].append((note, i))

    for i in range(score.noteCount):
        score.deleteNote(0)

    # ssn = []
    # smm = []

    # legato_pitches = {}

    nnn = []

    for p, notes in pitches.items():
        sn = sorted(notes, key=lambda x: x[0].time)
        sm = sorted(notes, key=lambda x: x[0].time + x[0].length)[::-1]
        
        nn = sn[0][0].clone()
        
        nn.length = sm[0][0].time - nn.time + sm[0][0].length 

        nnn.append(nn)
        
        # if note.number not in legato_pitches:
        #     legato_pitches[nn.number] = [nn]
        # else:
        #     legato_pitches[nn.number].append(nn)

    # pitches_valeus = legato_pitches.values()
    # if len(pitches_values) == 0:
    #     return

    if len(nnn) == 0:
        return

    st = nnn[0].time
    tm = nnn[0].length

    for n in nnn:
        if n.time < st:
            st = n
        if (st + n.length) > (st + tm):
            tm = n.length

    for n in nnn:
        nn = n.clone()
        nn.time = st
        nn.length = tm
        score.addNote(nn)
        
    # for p, notes in legato_pitches.items():
    #     if notes

        # score.addNote(nn)

        # pivot = notes[0]
        # nmin = pivot.time
        # nmax = pivot.time + pivot.length
        
        # for ni in range(0, len(notes) - 1):
        #     if n.time in notes:

main()