"""
ISC License

Copyright 2023 Olivier Stuker a.k.a. BinaryBorn

Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED “AS IS” AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
"""

import flpianoroll as flp
import time
import _random

random = _random.Random()

"""
Randomize note color
idea: D3Mens
code: BinaryBorn

2023-07-11
  - initial version

CHANGES
2023-07-17
  - replaced tension function

2023-10-16
  - added ISC license text
"""

# Utility function, Tension.
# If knob is True it behaves like the tension knob in scale levels,
# if knob is False it behaves like the Tension function in Formula Controller.
def Tension(value, rate, knob=True):
  if rate == 0: return value
  # rate mapping
  R = rate
  if not knob and rate > 0:
    R = math.log2(rate + 1) / 10
  elif not knob and rate < 0:
    R = -math.log2(-rate + 1) / 10
  # f(x,R) = (2^(-10*R*x)-1)/(2^(-10*R)-1)
  return (pow(2, -10 * R * value) - 1) / (pow(2, -10 * R) - 1)


def createDialog():
  form = flp.ScriptDialog("Randomize note color","Randomize note color/MIDI channel"
  + "\r\nIf seed is 0, a new random sequence is generated every time."
  + "\r\n\r\n2023-10-16, D3Mens & BinaryBorn")
  form.AddInputKnobInt('Min color', 0, 0, 15)
  form.AddInputKnobInt('Max color', 15, 0, 15)
  form.AddInputKnob('Uniform', 0, -1, 1)
  form.AddInputKnobInt('Seed', 0, 0, 0x7fffffff)
  
  return form

def apply(form):
  # set seed if seed is nonzero, otherwise use system time (default)
  seed = form.GetInputValue('Seed')
  if seed > 0:
    random.seed(seed)
  else:
    random.seed()

  col0 = form.GetInputValue('Min color')
  col1 = form.GetInputValue('Max color')
  dcol = col1 - col0

  tension = form.GetInputValue('Uniform')

  # get current notes
  notes = [flp.score.getNote(i) for i in range(flp.score.noteCount)]

  # change colors
  for note in notes:
    colRnd = Tension(random.random(), tension)
    note.color = col0 + round(colRnd * dcol)
